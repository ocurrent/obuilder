name: Main workflow

on:
  pull_request:
  push:
  schedule:
    # Prime the caches every Monday
    - cron: 0 1 * * MON

env:
  RUNC_VERSION: v1.1.14

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 4.14.x
          - 5.2.x

    runs-on: ${{ matrix.os }}

    steps:
      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: btrfs-progs zfsutils-linux xfsprogs
          version: 2

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: opam install . --deps-only --with-test

      - name: Cache runc
        id: cache-runc
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/runc
          key: ${{ env.RUNC_VERSION }}

      - name: Download runc
        if: steps.cache-runc.outputs.cache-hit != 'true'
        run: |
          sudo wget https://github.com/opencontainers/runc/releases/download/$RUNC_VERSION/runc.amd64 -O /usr/local/bin/runc

      - run: $GITHUB_WORKSPACE/.github/workflows/main.sh overlayfs
      - run: $GITHUB_WORKSPACE/.github/workflows/main.sh btrfs
      - run: $GITHUB_WORKSPACE/.github/workflows/main.sh zfs
      - run: $GITHUB_WORKSPACE/.github/workflows/main.sh xfs

  build_rsync:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 4.14.x
          - 5.2.x
        rsync_mode:
          # - rsync_hardlink_unsafe
          - rsync_hardlink
          - rsync_copy

    runs-on: ${{ matrix.os }}

    steps:
      - name: Free space
        # https://github.com/actions/runner-images/issues/2840#issuecomment-790492173
        run: sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost "$AGENT_TOOLSDIRECTORY"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: opam install . --deps-only --with-test

      - name: Cache runc
        id: cache-runc
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/runc
          key: ${{ env.RUNC_VERSION }}

      - name: Download runc
        if: steps.cache-runc.outputs.cache-hit != 'true'
        run: |
          sudo wget https://github.com/opencontainers/runc/releases/download/$RUNC_VERSION/runc.amd64 -O /usr/local/bin/runc

      - run: $GITHUB_WORKSPACE/.github/workflows/main.sh ${{matrix.rsync_mode}}

  # windows:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os:
  #         - windows-latest
  #       ocaml-compiler:
  #         - 4.14.x
  #         - 5.2.x

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Use OCaml ${{ matrix.ocaml-compiler }}
  #       uses: ocaml/setup-ocaml@v3
  #       with:
  #         ocaml-compiler: ${{ matrix.ocaml-compiler }}
  #         opam-repositories: |
  #           opam-repository-mingw: https://github.com/ocaml-opam/opam-repository-mingw.git#sunset
  #           default: https://github.com/ocaml/opam-repository.git

  #     - run: opam install . --deps-only --with-test

  #     - run: opam exec -- dune runtest

  docker:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 4.14.x
          - 5.2.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: opam install . --deps-only --with-test

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - run: $GITHUB_WORKSPACE/.github/workflows/main.sh docker
